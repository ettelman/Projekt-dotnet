@model Projekt_dotnet.Models.Cd
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Delete" + Model.Name;
}

<h1>Delete</h1>

    @if (SignInManager.IsSignedIn(User))
{
<h3>Are you sure you want to delete @Html.DisplayFor(model => model.Name)?</h3>

    <hr />
    <article class="ghost grid-2">
        <div class="part">
            <img src="~/images/@Html.DisplayFor(model => model.ImageName)" alt="@Html.DisplayFor(model => model.Title)" class="big-pic">
        </div>
        <div class="part-bigger">
            <ul class="no-list">
                <li><b>@Html.DisplayNameFor(model => model.Name)</b>: @Html.DisplayFor(model => model.Name)</li>
                <li> <b>@Html.DisplayNameFor(model => model.Price)</b>: @Html.DisplayFor(model => model.Price)</li>
                <li><b>@Html.DisplayNameFor(model => model.Category)</b>: @Html.DisplayFor(model => model.Category)</li>
                <li><b>@Html.DisplayNameFor(model => model.Artist)</b>: @Html.DisplayFor(model => model.Artist)</li>
                <li><b>@Html.DisplayNameFor(model => model.Title)</b>: @Html.DisplayFor(model => model.Title)</li>
                <li><b>@Html.DisplayNameFor(model => model.ImageName)</b>: @Html.DisplayFor(model => model.ImageName)</li>
            </ul>
        </div>
    </article>
    
    <form asp-action="Delete">
        <input type="hidden" asp-for="Id" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-action="List">Back to List</a>
    </form>

    }
    else
    {
    <div class="warning">
        You are currently not logged in and can't view this page <br />
        <a asp-area="" asp-controller="Home" asp-action="Index">Go to Home</a>
        <a class="link" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </div>
    }